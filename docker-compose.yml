version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=${REDIS_COMMANDER_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Application Services
  gateway:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-apps/gateway/Dockerfile}
    container_name: gateway
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    environment:
      - PORT=3000
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:${MONGOBD_PORT}
      - REDIS_URI=redis://redis:${REDIS_PORT}
      - RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}

  api:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-apps/api/Dockerfile}
    container_name: api
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    environment:
      - PORT=3000
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:${MONGOBD_PORT}
      - REDIS_URI=redis://redis:${REDIS_PORT}
      - RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}

  worker:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-apps/worker/Dockerfile}
    container_name: worker
    restart: always
    ports:
      - "3005:3005"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    environment:
      - PORT=3005
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:${MONGOBD_PORT}
      - REDIS_URI=redis://redis:${REDIS_PORT}
      - RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}

  cron:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-apps/cron/Dockerfile}
    container_name: cron
    restart: always
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    environment:
      - PORT=3002
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:${MONGOBD_PORT}
      - REDIS_URI=redis://redis:${REDIS_PORT}
      - RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
